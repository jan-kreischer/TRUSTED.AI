{
    "general": {
        "model_name": "Melike's Neural Network",
        "purpose_description": "Attack Classification",
        "domain_description": "IT Security",
        "training_data_description": "Alberto's classification data",
        "model_information": "Keras Neural Network Classifier for IT Security Incident Classification scenario",
        "target_column": "label",
        "authors": "Melike Demirci",
        "contact_information": "melike.demirci@uzh.ch"
    },
    "fairness": {
        "protected_feature": "connectivity",
        "protected_values": [
            0
        ],
        "favorable_outcomes": [
            13
        ]
    },
    "accountability": {
        "regularization": "none"
    },
    "scores": {
        "fairness": {
            "underfitting": NaN,
            "overfitting": NaN,
            "statistical_parity_difference": NaN,
            "equal_opportunity_difference": NaN,
            "average_odds_difference": NaN,
            "disparate_impact": NaN,
            "class_balance": 5
        },
        "explainability": {
            "algorithm_class": 1,
            "correlated_features": 2,
            "model_size": 2,
            "feature_relevance": NaN
        },
        "robustness": {
            "confidence_score": NaN,
            "clique_method": NaN,
            "loss_sensitivity": 2,
            "clever_score": 4,
            "er_fast_gradient_attack": NaN,
            "er_carlini_wagner_attack": NaN,
            "er_deepfool_attack": NaN
        },
        "accountability": {
            "normalization": 4,
            "missing_data": 5,
            "regularization": 1,
            "train_test_split": 5,
            "factsheet_completeness": 5
        }
    },
    "properties": {
        "fairness": {
            "underfitting": {
                "Non computable because": "name 'X_train' is not defined"
            },
            "overfitting": {
                "Non computable because": "name 'X_train' is not defined"
            },
            "statistical_parity_difference": {
                "Non computable because": "division by zero"
            },
            "equal_opportunity_difference": {
                "Non computable because": "division by zero"
            },
            "average_odds_difference": {
                "Non computable because": "division by zero"
            },
            "disparate_impact": {
                "Non computable because": "division by zero"
            },
            "class_balance": {
                "Metric Description": "Measures how well the training data is balanced or unbalanced",
                "Depends on": "Training Data",
                "Score": "5"
            }
        },
        "explainability": {
            "algorithm_class": {
                "dep": [
                    "Depends on",
                    "Model"
                ],
                "clf_name": [
                    "model type",
                    "Sequential"
                ]
            },
            "correlated_features": {
                "dep": [
                    "Depends on",
                    "Training Data"
                ],
                "pct_drop": [
                    "Percentage of highly correlated features",
                    "39.73%"
                ]
            },
            "model_size": {
                "dep": [
                    "Depends on",
                    "Training Data"
                ],
                "n_features": [
                    "number of features",
                    73
                ]
            },
            "feature_relevance": {
                "dep": [
                    "Depends on",
                    "Training Data and Model"
                ]
            }
        },
        "robustness": {
            "confidence_score": {
                "non_computable": [
                    "Non Computable Because",
                    "Can only be calculated on models which provide prediction probabilities."
                ]
            },
            "clique_method": {
                "non_computable": [
                    "Non Computable Because",
                    "Can only be calculated on Tree-Based models."
                ]
            },
            "loss_sensitivity": {
                "loss_sensitivity": [
                    "Average gradient value of the loss function",
                    "1.54"
                ],
                "depends_on": [
                    "Depends on",
                    "Model"
                ]
            },
            "clever_score": {
                "clever_score": [
                    "CLEVER Score",
                    "1.04"
                ],
                "depends_on": [
                    "Depends on",
                    "Model"
                ]
            },
            "er_fast_gradient_attack": {
                "non_computable": [
                    "Non Computable Because",
                    "Can be calculated on either SVC or Logistic Regression models."
                ]
            },
            "er_carlini_wagner_attack": {
                "non_computable": [
                    "Non Computable Because",
                    "Can be calculated on either SVC or Logistic Regression models."
                ]
            },
            "er_deepfool_attack": {
                "non_computable": [
                    "Non Computable Because",
                    "Can be calculated on either SVC or Logistic Regression models."
                ]
            }
        },
        "accountability": {
            "normalization": {
                "dep": [
                    "Depends on",
                    "Training and Testing Data"
                ],
                "Training_mean": [
                    "Mean of the training data",
                    "-0.00"
                ],
                "Training_std": [
                    "Standard deviation of the training data",
                    "1.00"
                ],
                "Test_mean": [
                    "Mean of the test data",
                    "-0.03"
                ],
                "Test_std": [
                    "Standard deviation of the test data",
                    "0.88"
                ],
                "normalization": [
                    "Normalization",
                    "Training data are standardized"
                ]
            },
            "missing_data": {
                "dep": [
                    "Depends on",
                    "Training Data"
                ],
                "null_values": [
                    "Number of the null values",
                    "0"
                ]
            },
            "regularization": {
                "dep": [
                    "Depends on",
                    "Factsheet"
                ],
                "regularization_technique": [
                    "Regularization technique",
                    "none"
                ]
            },
            "train_test_split": {
                "dep": [
                    "Depends on",
                    "Training and Testing Data"
                ],
                "train_test_split": [
                    "Train test split",
                    "80.00/20.00"
                ]
            },
            "factsheet_completeness": {
                "dep": [
                    "Depends on",
                    "Factsheet"
                ],
                "model_name": [
                    "Factsheet Property model name",
                    "present"
                ],
                "purpose_description": [
                    "Factsheet Property purpose description",
                    "present"
                ],
                "domain_description": [
                    "Factsheet Property domain description",
                    "present"
                ],
                "training_data_description": [
                    "Factsheet Property training data description",
                    "present"
                ],
                "model_information": [
                    "Factsheet Property model information",
                    "present"
                ],
                "target_column": [
                    "Factsheet Property target column",
                    "present"
                ],
                "authors": [
                    "Factsheet Property authors",
                    "present"
                ],
                "contact_information": [
                    "Factsheet Property contact information",
                    "present"
                ]
            }
        }
    }
}